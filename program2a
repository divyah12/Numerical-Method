Program -2a

Divyashree h b

Source Code:

#include<iostream>
#include<vector>
#include <math.h>//exp 
#include<iomanip>//precission

using namespace std;

double fun_x(double x) {
	cout << fixed;
	std::setprecision(6);

	return exp(x*x);
}

int main() {
	cout << "Divyashree H B" << endl;
	cout << "Newtons differential differance" << endl;
	int mov=1;//exit 
	double x, y;//intervals
	char testf;//testcase for N and Y
	int datapt;
	while (mov==1)
	{
		cout << "Enter N to give functional values else enter Y" << endl;
		cin >> testf;
		cout << "Enter the intervals " << endl;
		cin >> x >> y;
		//cout << x << y<<endl;
		cout << "Enter the number of data points" << endl;

		cin >> datapt;
		
		//calculate data point values and save in fun array i.e  x value array
		vector<double> fun(datapt);
		cout <<fixed;
		std::setprecision(6);
		double tempsu= (y - x) / (datapt-1);
		fun[0]=(x);
		for (int i = 1; i <datapt; i++)
		{
			fun[i] = fun[i - 1] + tempsu;
			//cout << fun[i] << endl;
		}
		//cout <<"datapoint"<< fun[0] << endl;
		vector<vector< double>> funval(datapt,vector<double>(datapt));	//f(x) value array	
		if (testf == 'N' || testf == 'n')
		{
			cout << "Enter the values :" << endl;
			double tempin;
			for (int i = 0; i <datapt; i++)
			{
				cin >> tempin;
				funval[i][0]=( tempin);
			}
		}
		else
		{
			double temp;
			for (int i = 0; i <datapt; i++)
			{
				temp = fun_x(fun[i]);  
				//cout << "y0\t" << temp<<endl;
				funval[i][0] = temp;
			}
			
		}
		// fun vector holds all data points in the given interval
		//funval[i][] in i all the initial f(x) or functional values are found
		//starting with iteration
		
		for (int i = 1; i < datapt;i++) {
			for (int j = 0; j < (datapt - i); j++) {
				//cout << i << " " << j << " " << funval[i - 1][j + 1] << " " << funval[i - 1][j] << " " << endl;
				funval[j][i] = ((funval[j+ 1][i - 1] ) - (funval[j][i-1])) / (fun[j + i] - fun[j]);
			}//for (int i = 0; i < tempfun.size(); i++)cout << tempfun[i] << "tempfun" << endl;
			
		}
		cout << "Differantial Table :" << endl;
		//// printing the elements
		for (int i = 0; i<datapt; i++)
		{
		cout << fun[i] << "  ";
		for (int j = 0; j < (datapt - i); j++) {
		cout << funval[i][j] << "  ";
		}
			cout << endl;
		}
		double X;
		cout<<"\n"<< "Enter the value of X:" << endl;
		cin >> X;
		//calculating P(X) for a given X
		//double prod_x=1;//(x-xi)
		double sumval=funval[0][funval[0].size()-1];//p(x)
		for (int  i = funval[0].size()-2;i>=0; i--)
		{
			sumval = funval[0][i] + (X-fun[i])*sumval;
		}

		cout << "P("<<X<<")   =  " << sumval<<endl;
		//condition to quiet
		cout << endl;
		cout << "To continue enter 1 else enter 0" << endl;
		cin >> mov;
	}

	return 0;}
  
